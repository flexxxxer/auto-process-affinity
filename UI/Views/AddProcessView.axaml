<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:UI.ViewModels"
             xmlns:c="clr-namespace:UI.Controls"

             mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="450"
             x:Class="UI.Views.AddProcessView"
             x:DataType="vm:IAddProcessViewModel">

  <Design.DataContext>
    <vm:DesignAddProcessViewModel />
  </Design.DataContext>

  <Grid RowDefinitions="*,Auto">
    <Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource SystemBaseHighColor}" />
    <Grid Grid.Row="0">
      <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                  MinWidth="260" Spacing="20">
        <Grid HorizontalAlignment="Stretch" ColumnDefinitions="*,5,Auto"
              IsVisible="{Binding ToEdit, Converter={x:Static ObjectConverters.IsNull}}">
          <AutoCompleteBox Text="{Binding ProcessName, Mode=TwoWay}"
                           Watermark="Enter process name" Grid.Column="0"
                           FilterMode="ContainsOrdinal"
                           ItemsSource="{Binding CurrentlyRunningProcessNames}"
                           x:Name="ProcessNameTextBox" />
          <Button Content="Or choose..." Grid.Column="2"
                  Command="{Binding ChooseProcessCommand}" />
        </Grid>

        <DockPanel HorizontalAlignment="Stretch"
                   IsVisible="{Binding ToEdit, Converter={x:Static ObjectConverters.IsNotNull}}">
          <TextBox Text="{Binding ProcessName, Mode=OneWay}" IsEnabled="False" />
        </DockPanel>

        <StackPanel HorizontalAlignment="Stretch">
          <TextBlock Text="Affinity value mode:" FontSize="16" />
          <DockPanel HorizontalAlignment="Stretch">
            <RadioButton GroupName="AffinityMode"
                         IsChecked="{Binding IsEvenAffinityModeChosen, Mode=TwoWay}"
                         x:Name="EvenAffinityModeCheckBox">
              <RadioButton.Content>
                <StackPanel Spacing="-5">
                  <TextBlock Text="Even" />
                  <TextBlock Text="turns off SMT" FontSize="11"
                             Foreground="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
                </StackPanel>
              </RadioButton.Content>
            </RadioButton>
            <NumericUpDown IsVisible="{Binding #EvenAffinityModeCheckBox.IsChecked}"
                           Value="{Binding EvenAffinityModeFirstNValue}"
                           ShowButtonSpinner="False"
                           ParsingNumberStyle="Integer" Watermark="First few" HorizontalAlignment="Right"
                           x:Name="EvenAffinityModeFirstNValueTextBox" />
          </DockPanel>
          <DockPanel>
            <RadioButton GroupName="AffinityMode" Content="First N"
                         IsChecked="{Binding IsFirstNAffinityModeChosen, Mode=TwoWay}"
                         x:Name="FirstNAffinityModeCheckBox" />
            <NumericUpDown IsVisible="{Binding #FirstNAffinityModeCheckBox.IsChecked}"
                           Value="{Binding FirstNAffinityModeValue}"
                           ShowButtonSpinner="False"
                           ParsingNumberStyle="Integer" Watermark="Count" HorizontalAlignment="Right"
                           x:Name="FirstNAffinityModeValueTextBox" />
          </DockPanel>
          <DockPanel>
            <RadioButton GroupName="AffinityMode" Content="Last N"
                         IsChecked="{Binding IsLastNAffinityModeChosen, Mode=TwoWay}"
                         x:Name="LastNAffinityModeCheckBox" />
            <NumericUpDown IsVisible="{Binding #LastNAffinityModeCheckBox.IsChecked}"
                           Value="{Binding LastNAffinityModeValue}"
                           ShowButtonSpinner="False"
                           ParsingNumberStyle="Integer" Watermark="Count" HorizontalAlignment="Right"
                           x:Name="LastNAffinityModeValueTextBox" />
          </DockPanel>
          <DockPanel>
            <RadioButton GroupName="AffinityMode" Content="Custom"
                         IsChecked="{Binding IsCustomAffinityModeChosen, Mode=TwoWay}"
                         x:Name="CustomAffinityModeCheckBox" />
            <StackPanel Orientation="Horizontal"
                        IsVisible="{Binding #CustomAffinityModeCheckBox.IsChecked}"
                        HorizontalAlignment="Right">
              <TextBlock Text="0x" VerticalAlignment="Center" />
              <NumericUpDown Value="{Binding CustomAffinityModeValue}"
                             ParsingNumberStyle="HexNumber" ShowButtonSpinner="False"
                             Watermark="Enter or paste" />
            </StackPanel>
          </DockPanel>
        </StackPanel>

        <StackPanel HorizontalAlignment="Stretch">
          <TextBlock Text="Applying affinity mode:" FontSize="16" />
          <RadioButton GroupName="AffinityApplyingMode"
                       IsChecked="{Binding IsAllWithMatchedNameAffinityApplyingModeChosen}">
            <RadioButton.Content>
              <StackPanel Spacing="-5">
                <TextBlock Text="All with matched name" />
                <TextBlock Text="recommended" FontSize="11"
                           Foreground="{DynamicResource SystemControlForegroundBaseMediumBrush}" 
                           IsVisible="{Binding ToEdit, 
                            Converter={x:Static ObjectConverters.IsNull}}"/>
              </StackPanel>
            </RadioButton.Content>
          </RadioButton>
          <RadioButton GroupName="AffinityApplyingMode" Content="First with matched name" 
                       IsChecked="{Binding IsFirstWithMatchedNameAffinityApplyingModeChosen}" />
          <CheckBox Content="Case insensitive" 
                    IsChecked="{Binding !IsCaseSensitiveAffinityApplyingMode, Mode=TwoWay}"/>
        </StackPanel>
      </StackPanel>
    </Grid>

    <Grid Grid.Row="1" ColumnDefinitions="*,15,*" HorizontalAlignment="Stretch"
          Margin="0 10 0 7">
      <c:IconedButton HorizontalAlignment="Right" Grid.Column="0"
                      Content="Cancel" IconFill="{DynamicResource CancelBrush}"
                      IconMargin="-6" Padding="0 0 6 0"
                      IconStroke="{DynamicResource CancelBrush}" IconStrokeThickness="1"
                      IconGeometry="{StaticResource DismissCircleIcon}"
                      Command="{Binding CancelCommand}" HotKey="Escape" />

      <c:IconedButton HorizontalAlignment="Left" Grid.Column="2"
                      Content="Add" IconFill="{DynamicResource OkBrush}"
                      IconMargin="3" Padding="0 1.6 6 0"
                      IconStroke="{DynamicResource OkBrush}" IconStrokeThickness="1"
                      IconGeometry="{StaticResource AddRegularIcon}" IconRenderTransform="scale(0.7)"
                      IconRenderTransformOrigin="50%,40%"
                      IsVisible="{Binding ToEdit, Converter={x:Static ObjectConverters.IsNull}}"
                      Command="{Binding AddProcessCommand}" HotKey="Enter" />

      <c:IconedButton HorizontalAlignment="Left" Grid.Column="2"
                      Content="Apply" IconFill="{DynamicResource OkBrush}"
                      IconMargin="-6" Padding="0 0 6 0"
                      IconStroke="{DynamicResource OkBrush}" IconStrokeThickness="1"
                      IconGeometry="{StaticResource CheckmarkCircleIcon}"
                      IsVisible="{Binding ToEdit, Converter={x:Static ObjectConverters.IsNotNull}}"
                      Command="{Binding AddProcessCommand}" HotKey="Enter" />
    </Grid>
  </Grid>

</UserControl>