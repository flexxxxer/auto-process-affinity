<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:UI.ViewModels"
						 xmlns:c="clr-namespace:UI.Controls"
						 
						 mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="450"
             x:Class="UI.Views.AddProcessView"
						 x:DataType="vm:IAddProcessViewModel">

	<Design.DataContext>
		<vm:DesignAddProcessViewModel/>
	</Design.DataContext>

	<Grid RowDefinitions="*,Auto">
		<Border Grid.Row="0" BorderThickness="0 0 0 1" BorderBrush="{DynamicResource SystemBaseHighColor}">
			<Grid>
				<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" 
				            MinWidth="260" Spacing="2">
					
					<Grid HorizontalAlignment="Stretch" ColumnDefinitions="*,5,Auto"
								IsVisible="{Binding ToEdit, Converter={x:Static ObjectConverters.IsNull}}">
						<TextBox Text="{Binding ProcessName, Mode=TwoWay}" 
						         Watermark="Enter process name" Grid.Column="0"
									   x:Name="ProcessNameTextBox" />
						<Button Content="Or choose..." Grid.Column="2"
						        Command="{Binding ChooseProcessCommand}"/>
					</Grid>

					<DockPanel HorizontalAlignment="Stretch" 
					           IsVisible="{Binding ToEdit, Converter={x:Static ObjectConverters.IsNotNull}}">
						<TextBox Text="{Binding ProcessName, Mode=OneWay}" IsEnabled="False"/>
					</DockPanel>
					
					<StackPanel HorizontalAlignment="Stretch">
						<DockPanel HorizontalAlignment="Stretch">
							<RadioButton GroupName="AffinityMode"
													 IsChecked="{Binding IsEvenAffinityModeChosen, Mode=TwoWay}"
													 x:Name="EvenAffinityModeCheckBox">
								<RadioButton.Content>
									<StackPanel Spacing="-5">
										<TextBlock Text="Even" />
										<TextBlock Text="turns off SMT" FontSize="11"
										           Foreground="{DynamicResource SystemControlForegroundBaseMediumBrush}"/>
									</StackPanel>
								</RadioButton.Content>
							</RadioButton>
							<TextBox IsVisible="{Binding #EvenAffinityModeCheckBox.IsChecked}"
											 Text="{Binding EvenAffinityModeFirstNValue, Mode=TwoWay}" 
											 Watermark="First few" HorizontalAlignment="Right" x:Name="EvenAffinityModeFirstNValueTextBox"/>
						</DockPanel>
						<DockPanel>
							<RadioButton GroupName="AffinityMode" Content="First N"
													 IsChecked="{Binding IsFirstNAffinityModeChosen, Mode=TwoWay}"
													 x:Name="FirstNAffinityModeCheckBox"/>
							<TextBox IsVisible="{Binding #FirstNAffinityModeCheckBox.IsChecked}"
											 Text="{Binding FirstNAffinityModeValue, Mode=TwoWay}" Watermark="Count"
											 HorizontalAlignment="Right"
											 x:Name="FirstNAffinityModeValueTextBox"/>
						</DockPanel>
						<DockPanel>
							<RadioButton GroupName="AffinityMode" Content="Last N"
													 IsChecked="{Binding IsLastNAffinityModeChosen, Mode=TwoWay}"
													 x:Name="LastNAffinityModeCheckBox"/>
							<TextBox IsVisible="{Binding #LastNAffinityModeCheckBox.IsChecked}"
											 Text="{Binding LastNAffinityModeValue, Mode=TwoWay}" Watermark="Count"
											 HorizontalAlignment="Right"
											 x:Name="LastNAffinityModeValueTextBox"/>
						</DockPanel>
						<DockPanel>
							<RadioButton GroupName="AffinityMode" Content="Custom"
													 IsChecked="{Binding IsCustomAffinityModeChosen, Mode=TwoWay}"
													 x:Name="CustomAffinityModeCheckBox"/>
							<StackPanel Orientation="Horizontal"
													IsVisible="{Binding #CustomAffinityModeCheckBox.IsChecked}"
													HorizontalAlignment="Right">
								<TextBlock Text="0x" VerticalAlignment="Center"/>
								<TextBox Text="{Binding CustomAffinityModeValue, Mode=TwoWay}" 
								         Watermark="Enter or paste"/>
							</StackPanel>
						</DockPanel>
					</StackPanel>
				</StackPanel>
			</Grid>
		</Border>

		<Grid Grid.Row="1" ColumnDefinitions="*,15,*" HorizontalAlignment="Stretch"
		      Margin="0 10 0 0">
			<c:IconedButton HorizontalAlignment="Right" Grid.Column="0"
			                Content="Cancel" IconFill="{DynamicResource CancelBrush}"
			                IconMargin="-6" Padding="0 0 6 0"
			                IconStroke="{DynamicResource CancelBrush}" IconStrokeThickness="1"
			                IconGeometry="{StaticResource DismissCircleIcon}"
			                Command="{Binding CancelCommand}" HotKey="Escape"/>

			<c:IconedButton HorizontalAlignment="Left" Grid.Column="2"
			                Content="Add" IconFill="{DynamicResource OkBrush}"
			                IconMargin="3" Padding="0 1.6 6 0"
			                IconStroke="{DynamicResource OkBrush}" IconStrokeThickness="1"
			                IconGeometry="{StaticResource AddRegularIcon}" IconRenderTransform="scale(0.7)"
			                IconRenderTransformOrigin="50%,40%"
			                IsVisible="{Binding ToEdit, Converter={x:Static ObjectConverters.IsNull}}"
			                Command="{Binding AddProcessCommand}" HotKey="Enter"/>

			<c:IconedButton HorizontalAlignment="Left" Grid.Column="2"
			                Content="Apply" IconFill="{DynamicResource OkBrush}"
			                IconMargin="-6" Padding="0 0 6 0"
			                IconStroke="{DynamicResource OkBrush}" IconStrokeThickness="1"
			                IconGeometry="{StaticResource CheckmarkCircleIcon}"
			                IsVisible="{Binding ToEdit, Converter={x:Static ObjectConverters.IsNotNull}}"
			                Command="{Binding AddProcessCommand}" HotKey="Enter"/>
		</Grid>
	</Grid>

</UserControl>
