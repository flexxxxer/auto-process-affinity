<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:UI.ViewModels"
             xmlns:c="clr-namespace:UI.Controls"
             xmlns:cv="clr-namespace:UI.Converters"
             xmlns:views="clr-namespace:UI.Views"

             mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="500"
             x:Class="UI.Views.StartupView"
             x:DataType="vm:IStartupViewModel">

  <Design.DataContext>
    <vm:DesignStartupViewModel />
  </Design.DataContext>

  <UserControl.Styles>
    <Styles>
      <Style Selector="Path[Tag=NotRunning]">
        <Setter Property="Stroke" Value="{DynamicResource NeutralBrush}" />
        <Setter Property="Fill" Value="{DynamicResource NeutralBrush}" />
        <Setter Property="Data" Value="{StaticResource CircleIcon}" />
        <Setter Property="RenderTransform" Value="scale(1)" />
        <Setter Property="RenderTransformOrigin" Value="1,1" />
      </Style>
      <Style Selector="Path[Tag=NotYetApplied]">
        <Setter Property="Stroke" Value="{DynamicResource WaitingForBrush}" />
        <Setter Property="Fill" Value="{DynamicResource WaitingForBrush}" />
        <Setter Property="Data" Value="{StaticResource SyncCircleIcon}" />
        <Setter Property="RenderTransform" Value="scale(1)" />
        <Setter Property="RenderTransformOrigin" Value="1,1" />
      </Style>
      <Style Selector="Path[Tag=AffinityCantBeSet]">
        <Setter Property="Stroke" Value="{DynamicResource CancelBrush}" />
        <Setter Property="Fill" Value="{DynamicResource CancelBrush}" />
        <Setter Property="Data" Value="{StaticResource ErrorCircleIcon}" />
        <Setter Property="RenderTransform" Value="scale(1)" />
        <Setter Property="RenderTransformOrigin" Value="1,1" />
      </Style>
      <Style Selector="Path[Tag=AffinityApplied]">
        <Setter Property="Stroke" Value="{DynamicResource OkBrush}" />
        <Setter Property="Fill" Value="{DynamicResource OkBrush}" />
        <Setter Property="Data" Value="{StaticResource CheckmarkCircleIcon}" />
        <Setter Property="RenderTransform" Value="scale(0.5)" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
      </Style>
    </Styles>
  </UserControl.Styles>

  <Grid RowDefinitions="*,Auto">

    <!-- hotkeys -->
    <Grid IsVisible="False">
      <Button HotKey="Escape" x:Name="ResetSelectionOnDataGrid" />
    </Grid>
    
    <Border Grid.Row="1" BorderThickness="0,1,0,0" 
            BorderBrush="{DynamicResource SystemBaseHighColor}"/>

    <DataGrid Grid.Row="0" CanUserResizeColumns="True"
              ItemsSource="{Binding Processes}"
              SelectionMode="{Binding UseOldSchoolAddEditStyle, 
								Converter={x:Static cv:BoolToSelectionModeConverters.ToDataGridSelectionMode}}"
              x:Name="MonitoredProcessesDataGrid">

      <DataGrid.Columns>
        <DataGridTextColumn Header="Process name" Width="*"
                            Binding="{Binding Name}" IsReadOnly="True" />

        <DataGridTemplateColumn Header="Affinity state" Width="Auto"
                                IsReadOnly="True" SortMemberPath="State">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Grid>
                <Path VerticalAlignment="Center" Margin="0 0 0 0"
                      Height="20" Width="20" Tag="{Binding State}" />
                <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                           ToolTip.Tip="{Binding State}"
                           Fill="Transparent" />
              </Grid>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <DataGridTemplateColumn Header="" Width="Auto" IsReadOnly="True"
                                IsVisible="{Binding !UseOldSchoolAddEditStyle}">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <StackPanel Orientation="Horizontal" Spacing="1">
                <c:IconedButton IconGeometry="{StaticResource EditIcon}"
                                IconFill="{DynamicResource OkBrush}"
                                IconStroke="{DynamicResource OkBrush}"
                                IconStrokeThickness="1"
                                Command="{Binding Path=$parent[views:StartupView].((vm:IStartupViewModel)DataContext).EditMonitoredProcessCommand, FallbackValue={}}"
                                CommandParameter="{Binding}" />
                <c:IconedButton IconGeometry="{StaticResource RemoveIcon}"
                                IconFill="{DynamicResource CancelBrush}"
                                IconStroke="{DynamicResource CancelBrush}"
                                IconRenderTransform="scale(0.4)"
                                Padding="-8 -8 -5 -6"
                                IconStrokeThickness="1"
                                Command="{Binding Path=$parent[views:StartupView].((vm:IStartupViewModel)DataContext).RemoveMonitoredProcessCommand, FallbackValue={}}"
                                CommandParameter="{Binding}" />
              </StackPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
      </DataGrid.Columns>
    </DataGrid>

    <StackPanel Grid.Row="1" HorizontalAlignment="Center"
                Orientation="Horizontal" Spacing="10" Margin="0 10 0 7">

      <c:IconedButton HorizontalAlignment="Left"
                      Content="Add new..." IconFill="{DynamicResource OkBrush}"
                      IconMargin="3" Padding="0 1.6 6 0"
                      IconStroke="{DynamicResource OkBrush}" IconStrokeThickness="1"
                      IconGeometry="{StaticResource AddRegularIcon}" IconRenderTransform="scale(0.7)"
                      IconRenderTransformOrigin="50%,40%"
                      Command="{Binding AddMonitoredProcessCommand}" />

      <c:IconedButton HorizontalAlignment="Left"
                      Content="Remove" IconFill="{DynamicResource CancelBrush}"
                      IconMargin="-6" Padding="0 1 6 0"
                      IconStroke="{DynamicResource CancelBrush}" IconStrokeThickness="1"
                      IconGeometry="{StaticResource RemoveIcon}" IconRenderTransform="scale(0.5)"
                      IconRenderTransformOrigin="50%,40%"
                      Command="{Binding RemoveMonitoredProcessCommand}"
                      x:Name="RemoveMonitoredProcessButton">
        <c:IconedButton.IsVisible>
          <MultiBinding Converter="{x:Static BoolConverters.And}">
            <Binding Path="UseOldSchoolAddEditStyle" />
            <MultiBinding Converter="{x:Static cv:ArithmeticConverters.FirstLessThanSecond}">
              <Binding Path="SelectedProcesses.Count" />
              <Binding>
                <Binding.Source>
                  <x:Int32>2</x:Int32>
                </Binding.Source>
              </Binding>
            </MultiBinding>
          </MultiBinding>
        </c:IconedButton.IsVisible>
      </c:IconedButton>

      <c:IconedButton HorizontalAlignment="Left"
                      Content="Remove all selected" IconFill="{DynamicResource CancelBrush}"
                      IconMargin="-6" Padding="0 1 6 0"
                      IconStroke="{DynamicResource CancelBrush}" IconStrokeThickness="1"
                      IconGeometry="{StaticResource RemoveIcon}" IconRenderTransform="scale(0.5)"
                      IconRenderTransformOrigin="50%,40%"
                      Command="{Binding RemoveAllSelectedMonitoredProcessesCommand}">
        <c:IconedButton.IsVisible>
          <MultiBinding Converter="{x:Static BoolConverters.And}">
            <Binding Path="UseOldSchoolAddEditStyle" />
            <Binding Path="!#RemoveMonitoredProcessButton.IsVisible" />
          </MultiBinding>
        </c:IconedButton.IsVisible>
      </c:IconedButton>

      <c:IconedButton HorizontalAlignment="Left"
                      IsVisible="{Binding UseOldSchoolAddEditStyle}"
                      Content="Edit" IconFill="{DynamicResource OkBrush}"
                      IconMargin="1" Padding="0 1.2 6 0"
                      IconStroke="{DynamicResource OkBrush}" IconStrokeThickness="1"
                      IconGeometry="{StaticResource EditIcon}" IconRenderTransform="scale(0.5)"
                      IconRenderTransformOrigin="50%,40%"
                      Command="{Binding EditMonitoredProcessCommand}" />
    </StackPanel>
  </Grid>

</UserControl>