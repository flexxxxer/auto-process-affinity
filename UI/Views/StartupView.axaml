<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
						 xmlns:vm="clr-namespace:UI.ViewModels"
						 xmlns:vme="clr-namespace:UI.ViewModels.Entities"
						 xmlns:controls="clr-namespace:UI.Controls"
						 xmlns:views="clr-namespace:UI.Views"
						 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"

						 mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="500"
             x:Class="UI.Views.StartupView"
						 x:DataType="vm:IStartupViewModel">
	
	<Design.DataContext>
		<vm:DesignStartupViewModel/>
	</Design.DataContext>

	<UserControl.Styles>
		<Styles>
			<Style Selector="Path[Tag=NotRunning]">
				<Setter Property="Stroke" Value="{DynamicResource NeutralBrush}"/>
				<Setter Property="Fill" Value="{DynamicResource NeutralBrush}"/>
				<Setter Property="Data" Value="{StaticResource CircleIcon}"/>
				<Setter Property="RenderTransform" Value="scale(1)"/>
				<Setter Property="RenderTransformOrigin" Value="1,1"/>
			</Style>
			<Style Selector="Path[Tag=NotYetApplied]">
				<Setter Property="Stroke" Value="{DynamicResource WaitingForBrush}"/>
				<Setter Property="Fill" Value="{DynamicResource WaitingForBrush}"/>
				<Setter Property="Data" Value="{StaticResource SyncCircleIcon}"/>
				<Setter Property="RenderTransform" Value="scale(1)"/>
				<Setter Property="RenderTransformOrigin" Value="1,1"/>
			</Style>
			<Style Selector="Path[Tag=AffinityCantBeSet]">
				<Setter Property="Stroke" Value="{DynamicResource CancelBrush}"/>
				<Setter Property="Fill" Value="{DynamicResource CancelBrush}"/>
				<Setter Property="Data" Value="{StaticResource ErrorCircleIcon}"/>
				<Setter Property="RenderTransform" Value="scale(1)"/>
				<Setter Property="RenderTransformOrigin" Value="1,1"/>
			</Style>
			<Style Selector="Path[Tag=AffinityApplied]">
				<Setter Property="Stroke" Value="{DynamicResource OkBrush}"/>
				<Setter Property="Fill" Value="{DynamicResource OkBrush}"/>
				<Setter Property="Data" Value="{StaticResource CheckmarkCircleIcon}"/>
				<Setter Property="RenderTransform" Value="scale(0.5)"/>
				<Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
			</Style>
		</Styles>
	</UserControl.Styles>

	<Grid RowDefinitions="Auto,*,Auto">

		<DockPanel Grid.Row="0" x:Name="MenuDockPanel">
			<Menu DockPanel.Dock="Top">
				<MenuItem Header="_App">
					<MenuItem Header="Export config to...">
						<MenuItem Header="File"/>
						<MenuItem Header="Folder"/>
					</MenuItem>
					<MenuItem Header="Import config from file"/>
					<MenuItem Header="Settings"/>
					<MenuItem Header="Exit"/>
				</MenuItem>
				<MenuItem Header="A_bout"/>
			</Menu>
		</DockPanel>
		
		<DataGrid Grid.Row="1" CanUserResizeColumns="True"
		          ItemsSource="{Binding Processes}" x:Name="MonitoredProcessesDataGrid">

			<i:Interaction.Behaviors>
				<ia:EventTriggerBehavior EventName="DoubleTapped">
					<ia:InvokeCommandAction Command="{Binding EditMonitoredProcessCommand}"
					                        CommandParameter="{Binding #MonitoredProcessesDataGrid.SelectedItem}"/>
				</ia:EventTriggerBehavior>
			</i:Interaction.Behaviors>

			<DataGrid.Columns>
				<DataGridTextColumn Header="Process name" Width="*"
                            Binding="{Binding Name}" IsReadOnly="True"/>

				<DataGridTemplateColumn Header="Affinity state" Width="Auto" 
																IsReadOnly="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Grid>
								<Path VerticalAlignment="Center" Margin="0 0 0 0"
                      Height="20" Width="20" Tag="{Binding State}"/>
								<Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
													 ToolTip.Tip="{Binding State}"
													 Fill="Transparent"/>
							</Grid>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="" Width="Auto" IsReadOnly="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<StackPanel Orientation="Horizontal" Spacing="1">
								<controls:IconedButton IconGeometry="{StaticResource EditIcon}"
                                       IconFill="{DynamicResource OkBrush}"
                                       IconStroke="{DynamicResource OkBrush}"
                                       IconStrokeThickness="1"
                                       Command="{Binding Path=$parent[views:StartupView].((vm:IStartupViewModel)DataContext).EditMonitoredProcessCommand, FallbackValue={}}"
                                       CommandParameter="{Binding}"/>
								<controls:IconedButton IconGeometry="{StaticResource RemoveIcon}"
                                       IconFill="{DynamicResource CancelBrush}"
                                       IconStroke="{DynamicResource CancelBrush}"
                                       IconRenderTransform="scale(0.4)"
                                       Padding="-8 -8 -5 -6"
                                       IconStrokeThickness="1"
                                       Command="{Binding Path=$parent[views:StartupView].((vm:IStartupViewModel)DataContext).RemoveMonitoredProcessCommand, FallbackValue={}}"
                                       CommandParameter="{Binding}"/>
							</StackPanel>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
			</DataGrid.Columns>
		</DataGrid>
		 
		<StackPanel Grid.Row="2" HorizontalAlignment="Center"
								Orientation="Horizontal" Spacing="10">
			<Button Content="Add new..." 
							Command="{Binding AddMonitoredProcessCommand}"/>
			<Button Content="Remove" IsVisible="False"
							Command="{Binding RemoveMonitoredProcessCommand}"/>
			<Button Content="Edit" IsVisible="False"
							Command="{Binding RemoveMonitoredProcessCommand}"/>
		</StackPanel>
	</Grid>

</UserControl>
